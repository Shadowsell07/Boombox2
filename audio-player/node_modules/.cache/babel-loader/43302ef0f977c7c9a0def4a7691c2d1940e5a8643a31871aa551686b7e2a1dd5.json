{"ast":null,"code":"// src/services/AudioService.ts\n\nexport class AudioService {\n  constructor() {\n    this.audio = void 0;\n    this.audioContext = null;\n    this.analyser = null;\n    this.dataArray = null;\n    this.audio = new Audio();\n    this.audio.addEventListener('canplay', () => console.log('Audio can play'));\n    this.audio.addEventListener('error', e => console.error('Audio error:', e));\n  }\n  setupAnalyser() {\n    if (!this.audioContext) {\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      this.analyser = this.audioContext.createAnalyser();\n      this.analyser.fftSize = 32;\n      const source = this.audioContext.createMediaElementSource(this.audio);\n      source.connect(this.analyser);\n      this.analyser.connect(this.audioContext.destination);\n      this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n    }\n  }\n  async play() {\n    try {\n      this.setupAnalyser();\n      await this.audio.play();\n      console.log('Playback started');\n    } catch (error) {\n      console.error('Play failed:', error);\n      throw error;\n    }\n  }\n  async loadTrack(url) {\n    console.log('Loading track:', url);\n    this.audio.src = url;\n    await this.audio.load();\n  }\n  pause() {\n    this.audio.pause();\n  }\n  setVolume(level) {\n    this.audio.volume = Math.max(0, Math.min(1, level));\n  }\n  getAudioData() {\n    if (this.analyser && this.dataArray) {\n      this.analyser.getByteFrequencyData(this.dataArray);\n      return this.dataArray;\n    }\n    return null;\n  }\n}","map":{"version":3,"names":["AudioService","constructor","audio","audioContext","analyser","dataArray","Audio","addEventListener","console","log","e","error","setupAnalyser","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","source","createMediaElementSource","connect","destination","Uint8Array","frequencyBinCount","play","loadTrack","url","src","load","pause","setVolume","level","volume","Math","max","min","getAudioData","getByteFrequencyData"],"sources":["/workspaces/Boombox2/audio-player/src/services/AudioService.ts"],"sourcesContent":["// src/services/AudioService.ts\n\nexport class AudioService {\n  private audio: HTMLAudioElement;\n  private audioContext: AudioContext | null = null;\n  private analyser: AnalyserNode | null = null;\n  private dataArray: Uint8Array | null = null;\n\n  constructor() {\n    this.audio = new Audio();\n    this.audio.addEventListener('canplay', () => console.log('Audio can play'));\n    this.audio.addEventListener('error', (e) => console.error('Audio error:', e));\n  }\n\n  setupAnalyser() {\n    if (!this.audioContext) {\n      this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n      this.analyser = this.audioContext.createAnalyser();\n      this.analyser.fftSize = 32;\n      const source = this.audioContext.createMediaElementSource(this.audio);\n      source.connect(this.analyser);\n      this.analyser.connect(this.audioContext.destination);\n      this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n    }\n  }\n\n  async play() {\n    try {\n      this.setupAnalyser();\n      await this.audio.play();\n      console.log('Playback started');\n    } catch (error) {\n      console.error('Play failed:', error);\n      throw error;\n    }\n  }\n\n  async loadTrack(url: string) {\n    console.log('Loading track:', url);\n    this.audio.src = url;\n    await this.audio.load();\n  }\n\n  pause() {\n    this.audio.pause();\n  }\n\n  setVolume(level: number) {\n    this.audio.volume = Math.max(0, Math.min(1, level));\n  }\n\n  getAudioData() {\n    if (this.analyser && this.dataArray) {\n      this.analyser.getByteFrequencyData(this.dataArray);\n      return this.dataArray;\n    }\n    return null;\n  }\n}"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,YAAY,CAAC;EAMxBC,WAAWA,CAAA,EAAG;IAAA,KALNC,KAAK;IAAA,KACLC,YAAY,GAAwB,IAAI;IAAA,KACxCC,QAAQ,GAAwB,IAAI;IAAA,KACpCC,SAAS,GAAsB,IAAI;IAGzC,IAAI,CAACH,KAAK,GAAG,IAAII,KAAK,CAAC,CAAC;IACxB,IAAI,CAACJ,KAAK,CAACK,gBAAgB,CAAC,SAAS,EAAE,MAAMC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAC3E,IAAI,CAACP,KAAK,CAACK,gBAAgB,CAAC,OAAO,EAAGG,CAAC,IAAKF,OAAO,CAACG,KAAK,CAAC,cAAc,EAAED,CAAC,CAAC,CAAC;EAC/E;EAEAE,aAAaA,CAAA,EAAG;IACd,IAAI,CAAC,IAAI,CAACT,YAAY,EAAE;MACtB,IAAI,CAACA,YAAY,GAAG,KAAKU,MAAM,CAACC,YAAY,IAAKD,MAAM,CAASE,kBAAkB,EAAE,CAAC;MACrF,IAAI,CAACX,QAAQ,GAAG,IAAI,CAACD,YAAY,CAACa,cAAc,CAAC,CAAC;MAClD,IAAI,CAACZ,QAAQ,CAACa,OAAO,GAAG,EAAE;MAC1B,MAAMC,MAAM,GAAG,IAAI,CAACf,YAAY,CAACgB,wBAAwB,CAAC,IAAI,CAACjB,KAAK,CAAC;MACrEgB,MAAM,CAACE,OAAO,CAAC,IAAI,CAAChB,QAAQ,CAAC;MAC7B,IAAI,CAACA,QAAQ,CAACgB,OAAO,CAAC,IAAI,CAACjB,YAAY,CAACkB,WAAW,CAAC;MACpD,IAAI,CAAChB,SAAS,GAAG,IAAIiB,UAAU,CAAC,IAAI,CAAClB,QAAQ,CAACmB,iBAAiB,CAAC;IAClE;EACF;EAEA,MAAMC,IAAIA,CAAA,EAAG;IACX,IAAI;MACF,IAAI,CAACZ,aAAa,CAAC,CAAC;MACpB,MAAM,IAAI,CAACV,KAAK,CAACsB,IAAI,CAAC,CAAC;MACvBhB,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF;EAEA,MAAMc,SAASA,CAACC,GAAW,EAAE;IAC3BlB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEiB,GAAG,CAAC;IAClC,IAAI,CAACxB,KAAK,CAACyB,GAAG,GAAGD,GAAG;IACpB,MAAM,IAAI,CAACxB,KAAK,CAAC0B,IAAI,CAAC,CAAC;EACzB;EAEAC,KAAKA,CAAA,EAAG;IACN,IAAI,CAAC3B,KAAK,CAAC2B,KAAK,CAAC,CAAC;EACpB;EAEAC,SAASA,CAACC,KAAa,EAAE;IACvB,IAAI,CAAC7B,KAAK,CAAC8B,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC;EACrD;EAEAK,YAAYA,CAAA,EAAG;IACb,IAAI,IAAI,CAAChC,QAAQ,IAAI,IAAI,CAACC,SAAS,EAAE;MACnC,IAAI,CAACD,QAAQ,CAACiC,oBAAoB,CAAC,IAAI,CAAChC,SAAS,CAAC;MAClD,OAAO,IAAI,CAACA,SAAS;IACvB;IACA,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}