{"ast":null,"code":"// src/services/AudioService.ts\n\nexport class AudioService {\n  constructor() {\n    this.audio = void 0;\n    this.audioContext = null;\n    this.analyser = null;\n    this.dataArray = null;\n    this.audioSource = null;\n    this.audio = new Audio();\n    this.audio.addEventListener('canplay', () => console.log('Audio can play'));\n    this.audio.addEventListener('error', e => console.error('Audio error:', e));\n  }\n  setupAnalyser() {\n    if (!this.audioContext) {\n      try {\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.analyser = this.audioContext.createAnalyser();\n        this.analyser.fftSize = 32;\n        this.audioSource = this.audioContext.createMediaElementSource(this.audio);\n        this.audioSource.connect(this.audioContext.destination);\n        this.audioSource.connect(this.analyser);\n        this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n        console.log('Audio analyzer setup complete');\n      } catch (error) {\n        console.error('Failed to setup analyzer:', error);\n      }\n    }\n  }\n  async play() {\n    try {\n      var _this$audioContext;\n      if (((_this$audioContext = this.audioContext) === null || _this$audioContext === void 0 ? void 0 : _this$audioContext.state) === 'suspended') {\n        await this.audioContext.resume();\n      }\n      await this.audio.play();\n      console.log('Playback started');\n    } catch (error) {\n      console.error('Play failed:', error);\n      throw error;\n    }\n  }\n  async loadTrack(url) {\n    console.log('Loading track:', url);\n    this.audio.src = url;\n    await this.audio.load();\n  }\n  pause() {\n    this.audio.pause();\n  }\n  setVolume(level) {\n    this.audio.volume = Math.max(0, Math.min(1, level));\n  }\n  getAudioData() {\n    if (this.analyser && this.dataArray) {\n      this.analyser.getByteFrequencyData(this.dataArray);\n      return this.dataArray;\n    }\n    return null;\n  }\n}","map":{"version":3,"names":["AudioService","constructor","audio","audioContext","analyser","dataArray","audioSource","Audio","addEventListener","console","log","e","error","setupAnalyser","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","createMediaElementSource","connect","destination","Uint8Array","frequencyBinCount","play","_this$audioContext","state","resume","loadTrack","url","src","load","pause","setVolume","level","volume","Math","max","min","getAudioData","getByteFrequencyData"],"sources":["/workspaces/Boombox2/audio-player/src/services/AudioService.ts"],"sourcesContent":["// src/services/AudioService.ts\n\nexport class AudioService {\n  private audio: HTMLAudioElement;\n  private audioContext: AudioContext | null = null;\n  private analyser: AnalyserNode | null = null;\n  private dataArray: Uint8Array | null = null;\n  private audioSource: MediaElementAudioSourceNode | null = null;\n\n  constructor() {\n    this.audio = new Audio();\n    this.audio.addEventListener('canplay', () => console.log('Audio can play'));\n    this.audio.addEventListener('error', (e) => console.error('Audio error:', e));\n  }\n\n  setupAnalyser() {\n    if (!this.audioContext) {\n      try {\n        this.audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n        this.analyser = this.audioContext.createAnalyser();\n        this.analyser.fftSize = 32;\n        this.audioSource = this.audioContext.createMediaElementSource(this.audio);\n        this.audioSource.connect(this.audioContext.destination);\n        this.audioSource.connect(this.analyser);\n        this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n        console.log('Audio analyzer setup complete');\n      } catch (error) {\n        console.error('Failed to setup analyzer:', error);\n      }\n    }\n  }\n\n  async play() {\n    try {\n      if (this.audioContext?.state === 'suspended') {\n        await this.audioContext.resume();\n      }\n      await this.audio.play();\n      console.log('Playback started');\n    } catch (error) {\n      console.error('Play failed:', error);\n      throw error;\n    }\n  }\n\n  async loadTrack(url: string) {\n    console.log('Loading track:', url);\n    this.audio.src = url;\n    await this.audio.load();\n  }\n\n  pause() {\n    this.audio.pause();\n  }\n\n  setVolume(level: number) {\n    this.audio.volume = Math.max(0, Math.min(1, level));\n  }\n\n  getAudioData() {\n    if (this.analyser && this.dataArray) {\n      this.analyser.getByteFrequencyData(this.dataArray);\n      return this.dataArray;\n    }\n    return null;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}