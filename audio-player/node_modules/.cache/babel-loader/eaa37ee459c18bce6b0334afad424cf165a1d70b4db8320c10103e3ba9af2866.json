{"ast":null,"code":"// src/services/AudioService.ts\n\nexport class AudioService {\n  constructor() {\n    this.audio = void 0;\n    this.analyser = null;\n    this.audioContext = null;\n    this.audio = new Audio();\n    this.setupAudioContext();\n  }\n  setupAudioContext() {\n    this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    if (this.audioContext) {\n      this.analyser = this.audioContext.createAnalyser();\n      const source = this.audioContext.createMediaElementSource(this.audio);\n      source.connect(this.analyser);\n      this.analyser.connect(this.audioContext.destination);\n    }\n  }\n  async loadTrack(url) {\n    this.audio.src = url;\n    await this.audio.load();\n  }\n  play() {\n    return this.audio.play();\n  }\n  pause() {\n    this.audio.pause();\n  }\n  setVolume(level) {\n    this.audio.volume = Math.max(0, Math.min(1, level));\n  }\n  getAnalyserData() {\n    if (!this.analyser) return new Uint8Array(0);\n    const data = new Uint8Array(this.analyser.frequencyBinCount);\n    this.analyser.getByteFrequencyData(data);\n    return data;\n  }\n}","map":{"version":3,"names":["AudioService","constructor","audio","analyser","audioContext","Audio","setupAudioContext","window","AudioContext","webkitAudioContext","createAnalyser","source","createMediaElementSource","connect","destination","loadTrack","url","src","load","play","pause","setVolume","level","volume","Math","max","min","getAnalyserData","Uint8Array","data","frequencyBinCount","getByteFrequencyData"],"sources":["/workspaces/Boombox2/audio-player/src/services/AudioService.ts"],"sourcesContent":["// src/services/AudioService.ts\n\nexport class AudioService {\n  private audio: HTMLAudioElement;\n  private analyser: AnalyserNode | null = null;\n  private audioContext: AudioContext | null = null;\n\n  constructor() {\n    this.audio = new Audio();\n    this.setupAudioContext();\n  }\n\n  private setupAudioContext() {\n    this.audioContext = new ((window as any).AudioContext || (window as any).webkitAudioContext)();\n    if (this.audioContext) {\n      this.analyser = this.audioContext.createAnalyser();\n      const source = this.audioContext.createMediaElementSource(this.audio);\n      source.connect(this.analyser);\n      this.analyser.connect(this.audioContext.destination);\n    }\n  }\n\n  async loadTrack(url: string) {\n    this.audio.src = url;\n    await this.audio.load();\n  }\n\n  play() {\n    return this.audio.play();\n  }\n\n  pause() {\n    this.audio.pause();\n  }\n\n  setVolume(level: number) {\n    this.audio.volume = Math.max(0, Math.min(1, level));\n  }\n\n  getAnalyserData() {\n    if (!this.analyser) return new Uint8Array(0);\n    const data = new Uint8Array(this.analyser.frequencyBinCount);\n    this.analyser.getByteFrequencyData(data);\n    return data;\n  }\n}"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,YAAY,CAAC;EAKxBC,WAAWA,CAAA,EAAG;IAAA,KAJNC,KAAK;IAAA,KACLC,QAAQ,GAAwB,IAAI;IAAA,KACpCC,YAAY,GAAwB,IAAI;IAG9C,IAAI,CAACF,KAAK,GAAG,IAAIG,KAAK,CAAC,CAAC;IACxB,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B;EAEQA,iBAAiBA,CAAA,EAAG;IAC1B,IAAI,CAACF,YAAY,GAAG,KAAMG,MAAM,CAASC,YAAY,IAAKD,MAAM,CAASE,kBAAkB,EAAE,CAAC;IAC9F,IAAI,IAAI,CAACL,YAAY,EAAE;MACrB,IAAI,CAACD,QAAQ,GAAG,IAAI,CAACC,YAAY,CAACM,cAAc,CAAC,CAAC;MAClD,MAAMC,MAAM,GAAG,IAAI,CAACP,YAAY,CAACQ,wBAAwB,CAAC,IAAI,CAACV,KAAK,CAAC;MACrES,MAAM,CAACE,OAAO,CAAC,IAAI,CAACV,QAAQ,CAAC;MAC7B,IAAI,CAACA,QAAQ,CAACU,OAAO,CAAC,IAAI,CAACT,YAAY,CAACU,WAAW,CAAC;IACtD;EACF;EAEA,MAAMC,SAASA,CAACC,GAAW,EAAE;IAC3B,IAAI,CAACd,KAAK,CAACe,GAAG,GAAGD,GAAG;IACpB,MAAM,IAAI,CAACd,KAAK,CAACgB,IAAI,CAAC,CAAC;EACzB;EAEAC,IAAIA,CAAA,EAAG;IACL,OAAO,IAAI,CAACjB,KAAK,CAACiB,IAAI,CAAC,CAAC;EAC1B;EAEAC,KAAKA,CAAA,EAAG;IACN,IAAI,CAAClB,KAAK,CAACkB,KAAK,CAAC,CAAC;EACpB;EAEAC,SAASA,CAACC,KAAa,EAAE;IACvB,IAAI,CAACpB,KAAK,CAACqB,MAAM,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEJ,KAAK,CAAC,CAAC;EACrD;EAEAK,eAAeA,CAAA,EAAG;IAChB,IAAI,CAAC,IAAI,CAACxB,QAAQ,EAAE,OAAO,IAAIyB,UAAU,CAAC,CAAC,CAAC;IAC5C,MAAMC,IAAI,GAAG,IAAID,UAAU,CAAC,IAAI,CAACzB,QAAQ,CAAC2B,iBAAiB,CAAC;IAC5D,IAAI,CAAC3B,QAAQ,CAAC4B,oBAAoB,CAACF,IAAI,CAAC;IACxC,OAAOA,IAAI;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}